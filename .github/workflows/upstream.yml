name: Build-n-Release Upstream

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - '**.flux'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
        
    - name: Cache Flux Build
      id: cachefluxupstream
      uses: actions/cache@v3.0.11
      with:
        path: |
          flux
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-fluxpipe-${{ hashFiles('**/fluxpipe-server.go') }}
          
    - name: Cache Status
      run: |
        echo ${{steps.cachefluxupstream.outputs.cache-hit}}
      
    - name: Get Flux
      if: steps.cachefluxupstream.outputs.cache-hit != 'true'
      uses: GuillaumeFalourd/clone-github-repo-action@v2
      with:
        owner: 'influxdata'
        repository: 'flux'
        
    - name: Compile Flux
      if: steps.cachefluxupstream.outputs.cache-hit != 'true'
      run: |
        cd flux
        go mod tidy
        go get ./...
        make
        
    - name: Build Fluxpipe
      run: |
        sed -i 's:/usr/src:'`pwd`':' flux.pc
        go mod tidy -modfile=go.upstream.mod 
        go get -modfile=go.upstream.mod ./...
        go build -a -ldflags '-extldflags "-static -w -ldl"' -modfile=go.upstream.mod -o fluxpipe-server-upstream fluxpipe-server.go
        
    - name: Compress Fluxpipe
      run: |
        strip fluxpipe-server-upstream
        upx --lzma --overlay=strip fluxpipe-server-upstream
        
    - id: tag_bump
      if: github.event_name != 'pull_request'
      name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.52.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: patch
        BRANCH: main
        WITH_V: true
        
    - name: Get Timestamp
      if: github.event_name != 'pull_request'
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 0
        format: 'YYYYMMDDHHmmss'
        
    - run: |
        echo "VERSION=${{ steps.tag_bump.outputs.new_tag }}" >> $GITHUB_ENV
        echo "TIME=${{ steps.time.outputs.time }}" >> $GITHUB_ENV
    
    - name: Upload release
      if: github.event_name != 'pull_request'
      uses: boxpositron/upload-multiple-releases@1.0.7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_config: |
            fluxpipe-server-upstream
        tag_name: upstream
        release_name: fluxpipe-upstream
        draft: false
        prerelease: false
        overwrite: true   
        
    - name: Log in to the Container registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Build and push
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v3.0.0
      with:
        context: .
        push: true
        tags: |
           ghcr.io/metrico/fluxpipe-upstream:latest
